name: Build and Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: IncidentReportingSystem

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore IncidentReportingSystem.sln

      - name: Build solution
        run: dotnet build IncidentReportingSystem.sln --configuration Release --no-restore

      - name: Run tests with coverage
        run: >
          dotnet test IncidentReportingSystem.sln
          --configuration Release
          --no-build
          --logger "trx;LogFileName=unit-tests.trx"
          --collect:"XPlat Code Coverage"
          --results-directory ./TestResults

      - name: Publish test results in GitHub UI
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Tests
          path: IncidentReportingSystem/TestResults/**/*.trx
          reporter: dotnet-trx
          fail-on-empty: true


      - name: Install ReportGenerator tool
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Generate HTML code coverage report
        run: |
          reportgenerator \
            -reports:IncidentReportingSystem/TestResults/**/coverage.cobertura.xml \
            -targetdir:IncidentReportingSystem/TestResults/CoverageReport \
            -reporttypes:Html

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: CodeCoverageHtml
          path: IncidentReportingSystem/TestResults/CoverageReport
