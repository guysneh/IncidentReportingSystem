name: Build and Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore IncidentReportingSystem/IncidentReportingSystem.sln

      - name: Build solution
        run: dotnet build IncidentReportingSystem/IncidentReportingSystem.sln --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test IncidentReportingSystem/IncidentReportingSystem.Tests/IncidentReportingSystem.Tests.csproj \
            --no-build \
            --configuration Release \
            --logger "trx;LogFileName=unit-tests.trx" \
            --collect:"XPlat Code Coverage" \
            --results-directory IncidentReportingSystem/TestResults

      - name: List TestResults content (debug)
        run: ls -R IncidentReportingSystem/TestResults

      - name: Publish test results (GitHub Checks)
        uses: dorny/test-reporter@v1
        with:
          name: Unit Tests
          path: IncidentReportingSystem/TestResults/**/*.trx
          reporter: dotnet-trx
          fail-on-error: true
          fail-on-empty: false

      - name: Generate HTML code coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.26
        with:
          reports: IncidentReportingSystem/TestResults/**/coverage.cobertura.xml
          targetdir: IncidentReportingSystem/TestResults/CoverageReport
          reporttypes: Html

      - name: Upload code coverage report (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: IncidentReportingSystem/TestResults/CoverageReport
