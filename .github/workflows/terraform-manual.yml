name: Terraform (manual)

on:
  workflow_dispatch:
    inputs:
      action:
        description: "What to run (plan or apply)"
        required: true
        default: plan
      directory:
        description: "Terraform working directory (relative to repo root)"
        required: true
        default: IncidentReportingSystem/terraform

permissions:
  id-token: write
  contents: read

jobs:
  tf:
    runs-on: ubuntu-latest
    concurrency:
      group: terraform-manual
      cancel-in-progress: false

    env:
      TF_WORKING_DIR: ${{ inputs.directory }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: "Azure login (OIDC)"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Export ARM_* env for Terraform OIDC"
              run: |
                echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
                echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
                echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
                echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
                echo "ARM_OIDC_TOKEN_FILE_PATH=${AZURE_FEDERATED_TOKEN_FILE}" >> $GITHUB_ENV

      - name: "Terraform Init"
        run: terraform -chdir="${{ env.TF_WORKING_DIR }}" init -backend-config="backend.hcl" -input=false

      - name: "Terraform Validate"
        run: terraform -chdir="${{ env.TF_WORKING_DIR }}" validate

      - name: "Terraform Plan"
        if: ${{ inputs.action == 'plan' }}
        run: terraform -chdir="${{ env.TF_WORKING_DIR }}" plan -no-color -input=false

      - name: "Terraform Apply"
        if: ${{ inputs.action == 'apply' }}
        run: terraform -chdir="${{ env.TF_WORKING_DIR }}" apply -auto-approve -input=false
