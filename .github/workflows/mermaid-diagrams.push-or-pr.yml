name: Render Mermaid diagrams

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  render:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install mermaid-cli
        run: |
          npm i -g @mermaid-js/mermaid-cli@10 puppeteer

      - name: Create Puppeteer config (no-sandbox)
        run: |
          cat > puppeteer-config.json << 'JSON'
          {
            "args": ["--no-sandbox", "--disable-setuid-sandbox"]
          }
          JSON
          cat puppeteer-config.json

      - name: Render diagrams to PNG and SVG
        run: |
          mmdc -p puppeteer-config.json -i docs/diagrams/azure-architecture.mmd -o docs/diagrams/azure-architecture.png -b transparent
          mmdc -p puppeteer-config.json -i docs/diagrams/azure-architecture.mmd -o docs/diagrams/azure-architecture.svg -b transparent
          mmdc -p puppeteer-config.json -i docs/diagrams/cicd-flow.mmd -o docs/diagrams/cicd-flow.png -b transparent
          mmdc -p puppeteer-config.json -i docs/diagrams/cicd-flow.mmd -o docs/diagrams/cicd-flow.svg -b transparent

      - name: Commit rendered images
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/diagrams/*.png docs/diagrams/*.svg || true
          if git diff --cached --quiet; then
            echo "No diagram changes to commit."
            exit 0
          fi
          git commit -m "docs(diagrams): render Mermaid diagrams"

      - name: Push to default branch or prepare PR
        id: push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          NEW_BRANCH: diagrams/render-${{ github.run_id }}
        run: |
          set -e
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git
          # Try direct push to default branch
          if git push origin HEAD:"$DEFAULT_BRANCH"; then
            echo "result=direct" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "Direct push blocked, trying PR branch..."
          # Create a new branch and push
          git checkout -b "$NEW_BRANCH"
          git push -u origin "$NEW_BRANCH"
          echo "result=pr" >> $GITHUB_OUTPUT

      - name: Create pull request (fallback)
        if: steps.push.outputs.result == 'pr'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.push.env.NEW_BRANCH }}
          title: "docs(diagrams): render Mermaid diagrams"
          body: "Auto-generated PNG/SVG diagram images from Mermaid sources."
          commit-message: "docs(diagrams): render Mermaid diagrams"
