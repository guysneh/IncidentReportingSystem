@inject Microsoft.JSInterop.IJSRuntime JS
@inject IncidentReportingSystem.UI.Core.Auth.AuthState Auth

@code {
    private sealed record Payload(string? token, DateTimeOffset? expUtc);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        string? token = null;
        DateTimeOffset? exp = null;

        try
        {
            var p = await JS.InvokeAsync<Payload>("irsAuth.get");
            token = p?.token;
            exp = p?.expUtc;
        }
        catch { /* ignore – continue without token */ }

        // Mark hydrated ALWAYS to avoid infinite spinners, even if no token
        await Auth.HydrateAsync(token, exp);
    }
}
