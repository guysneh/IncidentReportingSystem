@inherits LayoutComponentBase
@inject IncidentReportingSystem.UI.Core.Auth.AuthState AuthState
@inject IncidentReportingSystem.UI.Core.Auth.IAuthService Auth
@inject NavigationManager Nav
@inject IncidentReportingSystem.UI.Localization.IAppTexts T
@inject Microsoft.JSInterop.IJSRuntime JS  

<AuthHydrator />   @* hydrate token from localStorage as early as possible *@

<header class="navbar px-3">
     <DirHydrator />
     <AuthHydrator />
  <div class="ms-auto d-flex align-items-center gap-2">
      <LanguageSwitcher />
      <ThemeSwitch />
      @if (!IsWelcome)
      {
          <button class="btn btn-outline-secondary" @onclick="OnLogout">@T["Action.Logout"]</button>
      }
  </div>
</header>

<main>
  @Body
</main>

@code {
    bool IsWelcome => Nav.Uri.EndsWith("/", StringComparison.OrdinalIgnoreCase) ||
                      Nav.Uri.EndsWith("/welcome", StringComparison.OrdinalIgnoreCase);

    private async Task OnLogout()
    {
        try { await Auth.SignOutAsync(); } catch {}
        await AuthState.ClearAsync();
        try { await JS.InvokeVoidAsync("irsAuth.clear"); } catch {}  
        Nav.NavigateTo("/", forceLoad: true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        var culture = System.Globalization.CultureInfo.CurrentUICulture.Name;
        try { await JS.InvokeVoidAsync("irsRtl.applyByCulture", culture); } catch { }
    }
}
