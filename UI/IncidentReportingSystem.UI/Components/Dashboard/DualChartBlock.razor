@using MudBlazor
@using IncidentReportingSystem.UI.Core.Dashboard

<MudCard Class="chart-block">
    <MudCardHeader Class="chart-header">
        <div class="chart-title">
            <MudIcon Icon="@HeaderIcon" />
            <MudText Typo="Typo.subtitle2">@Title</MudText>
        </div>

        <!-- Mode selector (icons only) -->
        <MudTabs @bind-ActivePanelIndex="_tab"
                 KeepPanelsAlive="false"
                 Rounded="true"
                 Dense="true"
                 OverflowBehavior="OverflowBehavior.Wrap"
                 ScrollButtons="ScrollButtons.Never"
                 DisableRipple="true"
                 Class="chart-tabs">
            <MudTabPanel Icon="@Icons.Material.Filled.BarChart" />
            <MudTabPanel Icon="@Icons.Material.Filled.PieChart" />
            <MudTabPanel Icon="@Icons.Material.Filled.DashboardCustomize" />
        </MudTabs>

    </MudCardHeader>

    <MudCardContent>
        @if (Data is null || Data.Count == 0)
        {
            <MudText Class="text-muted">@EmptyText</MudText>
        }
        else if (_tab == 2)
        {
            <div class="dual-wrap">
                <div class="chart-frame" style="--chart-h:@($"{Height}px"); --chart-h-sm:@($"{Math.Max(200, Height - 100)}px");">
                    <MudChart ChartType="ChartType.Bar"
                              ChartSeries="@BarSeries"
                              XAxisLabels="@Labels"
                              Height="100%" Width="100%"
                              @key=@($"bar_{Height}_{BarSeries[0].Data.Sum()}_{_tab}") />
                </div>
                <PieRawChart Data="Data" Height="@Height" />
            </div>
        }
        else if (_tab == 1)
        {
            <PieRawChart Data="Data" Height="@Height" />
        }
        else
        {
            <div class="chart-frame" style="--chart-h:@($"{Height}px"); --chart-h-sm:@($"{Math.Max(200, Height - 100)}px");">
                <MudChart ChartType="ChartType.Bar"
                          ChartSeries="@BarSeries"
                          XAxisLabels="@Labels"
                          Height="100%" Width="100%"
                          @key=@($"bar_{Height}_{BarSeries[0].Data.Sum()}_{_tab}") />
            </div>
        }
    </MudCardContent>
</MudCard>

@code {
    [Parameter] public string Title { get; set; } = "";
    [Parameter] public string EmptyText { get; set; } = "—";
    [Parameter] public string HeaderIcon { get; set; } = Icons.Material.Filled.Insights;
    [Parameter] public IReadOnlyList<KeyCount>? Data { get; set; }
    [Parameter] public int Height { get; set; } = 360;
    [Parameter] public int DefaultMode { get; set; } = 0;

    private int _tab; private bool _init;

    protected override void OnParametersSet()
    {
        if (!_init) { _tab = DefaultMode is >= 0 and <= 2 ? DefaultMode : 0; _init = true; }
    }

    private string[] Labels => (Data ?? Array.Empty<KeyCount>()).Select(x => x.Key).ToArray();
    private List<ChartSeries> BarSeries => new()
    { new ChartSeries { Name = "Count", Data = (Data ?? Array.Empty<KeyCount>()).Select(x => (double)x.Count).ToArray() } };
}
