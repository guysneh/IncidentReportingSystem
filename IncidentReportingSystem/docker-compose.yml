services:
  db:
    image: postgres:16
    container_name: incidentreportingsystem-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_INTERNAL_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DATABASE}"]
      interval: 5s
      timeout: 3s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4
    container_name: incidentreportingsystem-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      db:
        condition: service_started

  incidentreportingsystem-migrator:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    working_dir: /src
    volumes:
      - ./:/src
    depends_on:
      db:
        condition: service_healthy
    restart: "no"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ConnectionStrings__DefaultConnection: "Host=${POSTGRES_HOST};Port=${POSTGRES_INTERNAL_PORT};Database=${POSTGRES_DATABASE};Username=${POSTGRES_USERNAME};Password=${POSTGRES_PASSWORD}"
    command: >
      bash -lc "dotnet tool install --global dotnet-ef --version 9.0.7 && /root/.dotnet/tools/dotnet-ef database update --project IncidentReportingSystem.Infrastructure --startup-project IncidentReportingSystem.API --context ApplicationDbContext"

  api:
    build:
      context: .
      dockerfile: IncidentReportingSystem.API/Dockerfile
    container_name: incidentreportingsystem-api
    restart: always
    depends_on:
      db:
        condition: service_healthy
      incidentreportingsystem-migrator:
        condition: service_completed_successfully
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      EnableSwagger: "true"
      JWT__Secret: ${JWT_SECRET}
      JWT__Issuer: ${JWT_ISSUER}
      JWT__Audience: ${JWT_AUDIENCE}
      JWT__ExpiryMinutes: ${JWT_EXPIRY_MINUTES}
      ConnectionStrings__DefaultConnection: "Host=${POSTGRES_HOST};Port=${POSTGRES_INTERNAL_PORT};Database=${POSTGRES_DATABASE};Username=${POSTGRES_USERNAME};Password=${POSTGRES_PASSWORD}"
    ports:
      - "${API_PORT}:8080"

volumes:
  pgdata: {}
